name: Build and Deploy to Azure VM

on:
  push:
    branches:
      - main  # Trigger deployment on push to main (or your desired branch)

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v4.2.2

    # Step 2: Set up Docker
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3.7.1

    # Step 3: Build the Docker Image
    - name: Build Docker image
      working-directory: Docker
      run: |
        docker build -t myapp:latest .
        docker images

    # # Step 4: Save Docker Image to tar file
    # - name: Save Docker image to tar file
    #   run: |
    #     docker save myapp:latest -o myapp.tar

    # # Step 5: Copy Docker image tar to Azure VM using SCP
    # - name: Copy Docker image to Azure VM
    #   run: |
    #     scp -o StrictHostKeyChecking=no -i ${{ secrets.SSH_PRIVATE_KEY }} myapp.tar ${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_IP }}:/home/${{ secrets.AZURE_VM_USERNAME }}/

    # # Step 6: SSH into the Azure VM and load the Docker image
    # - name: SSH into Azure VM and deploy container
    #   uses: appleboy/ssh-action@v0.1.6
    #   with:
    #     host: ${{ secrets.AZURE_VM_IP }}
    #     username: ${{ secrets.AZURE_VM_USERNAME }}
    #     key: ${{ secrets.SSH_PRIVATE_KEY }}
    #     port: 22
    #     script: |
    #       # Load the Docker image on the VM
    #       docker load -i /home/${{ secrets.AZURE_VM_USERNAME }}/myapp.tar

    #       # Run the Docker container on the VM
    #       docker run -d --name acd-app -p 80:3000 myapp:latest

    #       # Optionally restart or perform additional tasks
    #       echo "Docker container deployed successfully"
